title,tags
"What autograding software do folks use for Java code?","<java><grading><auto-graders>"
"Is it possible to ensure division of labor on a group assignment?","<group-work>"
"Objects Lab Before Inheritance and Polymorphism","<object-oriented-paradigm><labs><ap-computer-science-a>"
"Teaching Induction to Prove the Correctness of Algorithms","<lesson-ideas><cs-theory><induction>"
"Should the first Programming/Algorithms class be taught in pseudo-code?","<pseudo-code>"
"Cheating on labs","<best-practice><labs><ethics><cheating>"
"Analogy for teaching recursion","<recursion><teaching-analogy>"
"Using Processing as an entry point in an Introductory Course","<curriculum-design><processing>"
"Should assembly language be taught in an introductory course (or soon after)?","<curriculum-design><assembly>"
"How can I convey the idea of a programming language vs. a markup language?","<lesson-ideas><web-development><markup-languages><introductory-lesson>"
"When teaching Web Development, should server or client side come first?","<curriculum-design><web-development><front-end><back-end>"
"Recommended IDE for teaching web development to beginners","<web-development><ide><primary-school>"
"What are effective approaches for teaching dynamic programming?","<lesson-ideas><algorithms>"
"Using microcontrollers in an Introductory course","<student-motivation><robotics><arduino><physical-computing>"
"When should concurrency and parallel multi-processing concepts be introduced?","<concurrency>"
"on-What are pre-requisites for teaching version control to a high school CS class?","<github><revision-control>"
"How does one create a balanced AI curriculum in light of the popularity of Deep Learning?","<artificial-intelligence><machine-learning><deep-learning><curriculum-design>"
"How can I integrate teaching source code control (Git/Mercurial/etc) into my introductory CS class?","<revision-control>"
"Do automatic style hints help students to understand the language they're learning?","<best-practice><coding-style><ide><linters>"
"How to raise students' security awareness in programming?","<web-development><security>"
"What to consider when choosing version of Python?","<python>"
"In a course about Turing machines, how many questions like ""Construct a Turing Machine that does X"" should I include?","<turing-machines>"
"Should I have written tests on basic programming skills?","<best-practice><grading><syntax><assessment>"
"Should I teach modern web development in an introductory programming course? How?","<curriculum-design><web-development><undergraduate><javascript><c>"
"Best Practices / Effective Strategies For Building Diversity In High School CS Programs","<social-context><equity><classroom-environment>"
"Scheme vs Haskell for introducing functional programming","<functional-programming><language-choice>"
"What qualities should be considered when designing a front end project?","<web-development><problem-structure><project><front-end>"
"What can Snap! do that Scratch cannot?","<language-choice><scratch><snap><block-based-programming>"
"Explaining basic html structure","<lesson-ideas><introductory-lesson><html><xml>"
"How to encourage participation in the national olympiad in informatics?","<high-school><extracurricular-club>"
"Database theory (normalization) for beginners (adult education, MS Access)","<cs-theory><databases><industry-training>"
"How to ""teach"" CSS for students?","<html><css><javascript>"
"How to get girls more interested in computer science?","<diversity-gap>"
"How to teach the importance of indentation","<coding-style>"
"How to explain to people the importance of algorithms in computer programming?","<algorithms>"
"The use of the Octal system","<number-system>"
"Designing rubrics for AP Computer Science-style free response questions","<grading><ap-computer-science-a>"
"What is a good analogy for the Object Oriented paradigm?","<object-oriented-paradigm><teaching-analogy>"
"Command-line Java in AP CS A","<java><ap-computer-science-a><ide><command-line>"
"What kind of game (in Scratch) would require use of a list?","<scratch><arrays>"
"Programming languages specifically designed for beginners","<best-practice><language-choice>"
"How can I maintain interest in front end?","<high-school><student-motivation><web-development><front-end><engagement>"
"Presenting Mapping Reducibility (for P vs NP)","<lesson-ideas><complexity-theory>"
"What are the merits of including the history of computers in the entry level curriculum?","<social-context><computer-history>"
"Do I need Prolog to teach logic concepts?","<language-choice>"
"How do you structure broad, open-ended, freely chosen projects so that students use class time wisely?","<labs><project><student-motivation>"
"Teaching students to hunt for and debug their own errors","<debugging>"
"Programming curriculum for elderly students","<curriculum-design><adult-education>"
"Dealing with students who complete labs very quickly","<high-school><labs><best-practice><differentiation>"
"Lesson Idea: Arrays, Pointers, and Syntactic Sugar","<lesson-ideas><arrays><c><syntax><abstraction>"
"Is it more effective to teach low level languages before high level ones or vice versa?","<curriculum-design>"
"Real life examples of 0-indexing","<lesson-ideas><arrays><abstraction>"
"Ruby backend framework choice: Ruby on Rails vs Sinatra","<language-choice><curriculum-design><ruby>"
"Encourage students to be independent","<lesson-ideas><curriculum-design>"
"Self guided learning about audio processing","<curriculum-design><artificial-intelligence><self-learning>"
"How can I discourage poor design while using automatic grading of submissions?","<grading><coding-style><auto-graders>"
"How to avoid getting emotionally attached to my students' projects?","<social-context>"
"Analogy for static objects (or members)","<java><teaching-analogy><high-school><static>"
"Workflow for Code Submission","<java><ap-computer-science-a><github>"
"Introducing A* Search Algorithm","<lesson-ideas><algorithms>"
"Are userscripts a good teaching tool?","<lesson-ideas><web-development><front-end>"
"Simple Pointer Examples in C","<lesson-ideas><c><pointers><code-example>"
"Effectiveness of Parsons Problems","<lesson-ideas>"
"How to illustrate scope problem when creating variables inside `if` statements in Java","<java><ap-computer-science-a><scope>"
"Note-taking policy: laptops, or by hand?","<best-practice><notes>"
"Supplementing Curriculum with Online Resources","<curriculum-design>"
"Video Games during class","<classroom-management>"
"Computers are down; what's in your bag of tricks for teaching CS when they can't get on a computer?","<lesson-ideas><high-school>"
"Final exam advice","<ap-computer-science-a><high-school>"
"What makes imperative programming easier or harder to learn?","<imperative-programming><programming-paradigms>"
"Assignments for Introductory Level Processing","<curriculum-design><processing>"
"What program follows ""hello, world""?","<curriculum-design><introductory-lesson>"
"Excel macro recorder exercises","<lesson-ideas><exercises>"
"Assessing programming skills of students under 18 years","<assessment>"
"What are good sample programs for learning to use a debugger?","<java><labs><debugging>"
"Significant algorithm from CS for DrRacket that emphasize cons, car, and cdr","<lesson-ideas><algorithms><functional-programming><scheme>"
"In-class server access limits","<engagement><student-motivation><classroom-management>"
"Introducing self containing objects (Node)","<object-oriented-paradigm><data-structure>"
"Basic OOP practice exercises for inheritance and polymorphism","<lesson-ideas><object-oriented-paradigm><exercises>"
"How to provide individual grades for group project work?","<grading><project>"
"Most beneficial CodingBat problems for AP CS A FRQs","<java><ap-computer-science-a>"
"Teaching coding paradigms and concepts with specific context","<java><frc><robotics><first>"
"How can I show the value of best practices?","<lesson-ideas><best-practice><coding-style>"
"Teaching loop invariant choice","<lesson-ideas><cs-theory><induction>"
"Good beginning assembly language for teaching about stack function calls","<language-choice><assembly>"
"Scope and Sequence for Raspberry Pi Course","<curriculum-design><raspberry-pi>"
"Instructional Methods for In-class Code Demos","<lesson-ideas><curriculum-design>"
"What should be the difference between a university course and developer training?","<student-motivation><adult-education>"
"Problematic student at a very high level","<high-school><best-practice><student-motivation><differentiation>"
"Demographics in Programming Teams in Early CS Courses","<best-practice><project><group-work>"
"What are good projects for metaprogramming?","<ruby><metaprogramming>"
"Colors in Blocks-based Languages","<block-based-programming>"
"How to respond when students ask ""is recursion good practice""?","<lesson-ideas><student-motivation><recursion>"
"Suggestions for encouraging good Coding Practices?","<grading><best-practice><auto-graders><coding-style>"
"How can I incorporate agile development into CS1/CS2 courses?","<curriculum-design><agile-development>"
"What are good/bad topics for a non-major CS0 course?","<curriculum-design><cs0>"
"Genetic Algorithm enrichment lesson","<java><high-school><exercises><genetic-algorithm>"
"Why is the critical-section problem always presented with code in infinite loops?","<concurrency><operating-systems>"
"Learning about the Blockchain","<curriculum-design><self-learning><resource-request>"
"Deep Learning Teaching Resources","<machine-learning><deep-learning><resource-request>"
"Homework Policy for Advanced/Honors Students","<ap-computer-science-a><homework><ap-cs-principles>"
"How to teach students not to use jump statements","<curriculum-design><best-practice><coding-style>"
"Teaching identifier naming conventions","<coding-style>"
"The importance of writing understandable code","<coding-style>"
"Analogy for abstract classes","<java><object-oriented-paradigm><teaching-analogy>"
"Teaching Other Markup Languages","<latex><markdown><markup-languages>"
"How to teach which loop should be used","<lesson-ideas><looping>"
"Explaining how an Interface is a contract","<high-school><java><teaching-analogy><object-oriented-paradigm><interface>"
"Teaching with just a single Makey Makey and Sphero","<lesson-ideas><high-school><engagement><makey-makey><sphero>"
"What is a good analogy for pass by value vs by reference?","<lesson-ideas><teaching-analogy>"
"How can I set up Eclipse/eGit/GitHub in a way that is easy for students?","<git><eclipse><egit>"
"Motivating examples for switch/case in Java","<lesson-ideas><branching>"
"How can I explain lambda calculus to my class?","<teaching-analogy>"
"Integrating Graph Theory into AP CS A","<ap-computer-science-a><labs><graph-theory>"
"How to explain lambda expressions","<lambda-expressions>"
"How to bring attention to computational complexity?","<algorithms>"
"Should CS students be doing their tests on paper?","<high-school><grading><undergraduate>"
"Introducing the MVC pattern along with JavaFX","<curriculum-design><lesson-ideas><java><mvc>"
"How to teach to write optimized code","<coding-style>"
"Pseudocode or Flowcharts?","<algorithms><pseudo-code><flowcharts>"
"Interview lesson on ""Computational Thinking""","<lesson-ideas><computational-thinking>"
"Justification for an objects-early approach to introductory programming","<object-oriented-paradigm><objects-first>"
"Opportunities for Interdepartmental Collaboration","<curriculum-design><collaboration>"
"How can I help my students to think algorithmically?","<algorithms><pseudo-code>"
"Looking for a block-based programming language for AP CS P","<block-based-programming><ap-cs-principles>"
"Thoughts on copying and pasting code?","<classroom-management><plagiarism>"
"Intuitive example of an NP problem","<teaching-analogy><complexity-theory>"
"When should I scrap my projector for a blackboard?","<classroom-infrastructure>"
"What would be a good first choice to teach game programming to beginners?","<language-choice><game-design>"
"How is your teaching affected by how you learned?","<best-practice><self-learning>"
"Do you see the ""Bimodal Distribution"" too?","<best-practice><student-motivation>"
"Do your students pay attention when you speak?","<adult-education><classroom-management>"
"Undergrad level computer architecture course","<resource-request><self-learning><architecture>"
"Explaining pointers to highschoolers","<high-school><pointers>"
"What to gather feedback on?","<best-practice><undergraduate>"
"Principles of SOLID in OOP","<high-school><teaching-analogy><object-oriented-paradigm><solid-principles>"
"What is the best layout for a Middle School computer lab?","<classroom-management><classroom-environment>"
"What are some good examples of using a stack data structure?","<teaching-analogy><data-structure>"
"Benefits of explaining low-level architecture in a programming class","<curriculum-design><high-school><architecture>"
"How to teach the value of the command line in high school?","<lesson-ideas><command-line>"
"Introducing image processing - Should I teach the math","<curriculum-design><high-school><image-processing>"
"How do I convince my students that visual programming is real programming?","<block-based-programming>"
"How to explain what code is to my parents?","<layperson>"
"How to stress the importance of testing code?","<lesson-ideas><high-school>"
"Do you use any teaching assistant tool in your CS1 lab classes?","<high-school><lecture-tools>"
"Should unit testing be taught in introductory programming classes?","<curriculum-design><undergraduate><unit-testing>"
"How do I scaffold students toward building meaningful projects?","<student-motivation><project><block-based-programming>"
"What statistics should be in a computer science degree?","<curriculum-design><undergraduate>"
"How can I explain the difference between CS and coding to a layperson?","<cs-theory><layperson>"
"How to deal with very low performing students?","<struggling-students><differentiation>"
"Overcoming a friend's self-discouragement","<student-motivation><layperson>"
"Is asking students to debug existing code better than having them write new code?","<debugging>"
"How to overcome the TDD/BDD time fallacy","<curriculum-design>"
"How important is learning Binary for first-year college students?","<curriculum-design>"
"Can sharing learning stats be beneficial to guide beginner students?","<best-practice><student-motivation>"
"While giving an introduction to the Internet, should I talk about the risks?","<security>"
"Transition from Java to Python","<lesson-ideas><high-school><introductory-lesson>"
"Priority Queue practice vs examples","<lesson-ideas><best-practice><priority-queue>"
"How to handle students who excel at coding but aren't interested in theory","<classroom-management>"
"To what extent should UML be covered in the context of a degree?","<object-oriented-paradigm><undergraduate>"
"Balance between teaching and projects in a club","<curriculum-design><project><extracurricular-club>"
"How do I teach ethics in hacking?","<security><social-context><ethics>"
"How should the paradigm shift associated with functional programming be approached?","<undergraduate><functional-programming>"
"Should test cases be made available to students for assessed assignments?","<undergraduate><grading><homework>"
"How should floating point inaccuracies be explained and justified?","<number-system>"
"A quick ruby crash course","<self-learning><resource-request><ruby>"
"Starting open source","<high-school><python>"
"Curriculum Design for a Unit on Alan Turing and His Impact on CS","<lesson-ideas><curriculum-design><resource-request><engagement><turing-machines>"
"Multi-client to server connection demonstration","<high-school><teaching-analogy><server-client>"
"How to teach a flipped course based on the AI MOOC?","<curriculum-design><resource-request><artificial-intelligence>"
"How to prepare students for bias in industry","<equity>"
"Demonstrating the possible dangers of SQL injection","<lesson-ideas><high-school><sql-injection>"
"Uses of high school Computer Science: where can it lead other than university CS?","<student-motivation>"
"Curriculum choice for AP Computer Science Principles","<curriculum-design><high-school><ap-cs-principles>"
"How do you teach EVERY student?","<curriculum-design><best-practice><differentiation>"
"Dealing with students who are overly motivated","<student-motivation><differentiation>"
"Talking about new/active subfields of CS to inspire students","<high-school>"
"How to supplement Khan Academy","<curriculum-design><extracurricular-club>"
"How can I automate the grading of programming assignments?","<grading><auto-graders>"
"How can I prepare CS majors for non-programming jobs?","<careers>"
"What intro CS coursework is most useful for life science students?","<curriculum-design>"
"Explaining access levels and visibility in OOP","<high-school><teaching-analogy><java><object-oriented-paradigm>"
"Is it worthwhile for college professors to join SIGCSE?","<acm><sigcse>"
"Is it worth it for high school teachers to join SIGCSE?","<sigcse>"
"CS connections to Life Science for ages 14-18?","<high-school>"
"How to teach competitive programming?","<high-school><best-practice>"
"How to integrate CS when learning about DNA/RNA/protein","<curriculum-design><cross-discipline><biology>"
"Event-driven or polling for beginning programming environments?","<language-choice><programming-paradigms>"
"How to deal with students that don't like CS?","<high-school><best-practice>"
"How should educators ensure their curriculum remains relevant over time?","<curriculum-design><undergraduate>"
"Teaching ""math function"" vs. ""CS function""","<best-practice><mathematics>"
"How do I teach ""math equality"" vs. ""CS assignment"" vs. ""CS equality logic operator""?","<mathematics><variables>"
"Teaching ""CS integer"" vs. ""math integer""","<high-school><mathematics><data-types>"
"How to adapt pair programming to a shared terminal environment like Cloud9?","<pair-programming>"
"Classroom use of a limited port scan in the wild?","<security><ethics>"
"How to communicate expectations around ""rabbit holes""?","<classroom-management>"
"What would be a good analogy for IP addresses and ports?","<teaching-analogy><networks>"
"How can I convince my fellow CS teachers that reaching every student is a worthwhile goal?","<curriculum-design><best-practice><undergraduate><differentiation>"
"How important is ""delivering the content"" of a course?","<best-practice><undergraduate>"
"Do Python and Java lead students to construct different mental models of memory?","<java><python><variables>"
"Lambda expressions exercises and practice","<high-school><java><exercises><lambda-expressions>"
"Where can a student independently learn elementary recursion, preferably in Java?","<java><resource-request><recursion>"
"What advantages/disadvantages have you seen with Pair Programming in the classroom","<best-practice><classroom-management><pair-programming>"
"What are effective ways to prepare students for the AP CS Principles Exam?","<high-school><ap-cs-principles>"
"Good datasets for intro CS courses?","<resource-request><databases>"
"Is there a compilation of AP CSP scores by curriculum?","<high-school><grading><ap-cs-principles>"
"How should students be encouraged to reflect and improve after summative assessment?","<undergraduate><assessment>"
"How do I approach teaching Python to 12-year-olds as a first-time teacher?","<lesson-ideas><python><introductory-lesson>"
"How do you encourage students to take criticism of their code constructively?","<student-motivation>"
"What is a good analogy to introduce databases and SQL?","<teaching-analogy><introductory-lesson><sql>"
"What are the benefits/uses of a SMART Board in CS education (or are there none)?","<classroom-infrastructure>"
"The impact of switching to Java 10","<curriculum-design><java>"
"How do you make your CS lectures more interesting?","<student-motivation>"
"Should teachers enforce standardization of spacing and braces?","<coding-style>"
"Unit Review for boolean algebra","<cs-theory><curriculum-review><boolean-algebra>"
"Should Java Static space and Memory Model be a part of AP CS","<curriculum-design><high-school><static>"
"How to document the developed work using an agile methodology?","<agile-development><documentation>"
"Explaining how the Internet and the World Wide Web work","<lesson-ideas><teaching-analogy><resource-request>"
"Uses of selection in programming (if, switch etc)","<branching>"
"How to tell a student that s/he should enroll in a different program?","<student-motivation>"
"What should a teacher do with information about plagiarism before the final submission","<best-practice><plagiarism>"
"Best practices for letters of recommendation in CS","<best-practice><advising>"
"Avoiding difficulties when teaching with metaphors","<teaching-analogy><classroom-management><engagement>"
"Review of Information Theory Lab","<labs><materials-review><information-theory>"
"Working with students with specific secondary skill","<high-school><best-practice><differentiation>"
"What are good models for an Honors Program for CS students?","<best-practice><student-motivation><differentiation>"
"Tips for self-study with just a textbook and google","<best-practice><self-learning><mathematics><textbook>"
"What would be reasonable to include in an Introduction to AI class for a 7th-8th grade after school program?","<curriculum-design><lesson-ideas>"
"What are good models for a Tutorial System for lagging CS students?","<best-practice><undergraduate><differentiation>"
"How to make term reports, easy to do (and secondly effective, and accurate)","<grading>"
"Advances in CS appropriate for CS1 and CS2 made by female computer scientists","<social-context><equity>"
"When a student submits a work that is a copy from a colleague, should you also punish the student that made the work?","<plagiarism>"
"Best puzzle type to foster logical thinking","<best-practice>"
"Working on practical projects as a team - good or bad?","<best-practice><student-motivation>"
"Best Training App Ideas","<project>"
"Evaluating resources for teaching myself reinforcement learning","<lesson-ideas><self-learning><artificial-intelligence><reinforcement-learning>"
"Who should own the intellectual property on a program developed in classes?","<best-practice><ethics><intellectual-property>"
"Where can I find a breakdown by race and gender of US CS bachelor's degrees?","<equity>"
"CS-oriented Ice-Breaker Games","<active-learning>"
"Teaching the humble for loop","<best-practice><looping>"
"Teaching the tradeoffs of the foreach loop","<java><looping>"
"Learning in a developing field","<curriculum-design><resource-request><self-learning><quantum-computing>"
"Learning from research papers in a developing field","<self-learning><quantum-computing><scientific-papers>"
"Note-taking for self-studying","<self-learning><notes>"
"Is it important to teach pointers in a first course using Java?","<best-practice><object-oriented-paradigm><pointers>"
"Is SICP appropriate for an advanced high school CS course?","<curriculum-design><resource-information>"
"How can I help students develop intuition about a programming language?","<undergraduate><syntax>"
"Jargon/Vocab about variables--- yes or no?","<introductory-lesson>"
"What 'procedural' habits to break when teaching 'functional' programming?","<functional-programming><programming-paradigms><imperative-programming><scheme>"
"Lesson ideas for introducing macros in C","<lesson-ideas><introductory-lesson><ap-cs-principles><c>"
"Active learning for boolean algebra","<lesson-ideas><active-learning><boolean-algebra>"
"Lesson plan for teaching java graphics","<java><introductory-lesson><lesson-review>"
"Placement of App Inventor in high school CS curriculum","<curriculum-design><high-school><app-inventor>"
"How should I advise an undergraduate who wants a career teaching CS?","<careers>"
"What non-programming book is vital for learning the CS mindset?","<teaching-analogy><resource-request><adult-education><computational-thinking><textbook>"
"Order to Teach Topics in an Intro Programming Class","<curriculum-design><variables>"
"How do I explain blockchain using an analogy?","<teaching-analogy><layperson>"
"Why would mutation be considered by some as a difficult concept to grasp?","<curriculum-design><variables>"
"Framework choice for AP CS A students: Swing or JavaFX?","<java><ap-computer-science-a><resource-information><swing><javafx>"
"How can I make database normalization more clear?","<lesson-ideas><teaching-analogy><databases>"
"Using another person to motivate","<self-learning><group-work><cross-discipline>"
"Teaching high-level versus low-level concepts","<curriculum-design>"
"Ideas for introducing databases to Android development students","<java><self-learning><resource-request><databases>"
"Teaching syntactic sugar","<curriculum-design><high-school><syntax>"
"Why did the percentage of CS bachelor's degrees going to women peak in 1984?","<social-context><equity>"
"How do I teach git to a teenager","<resource-request><self-learning><revision-control><git>"
"The order of subjects in beginner's curriculum","<high-school><java><curriculum-review>"
"How to teach students to work with multiple layers of abstraction?","<undergraduate><data-structure>"
"Why did interest in CS majors plummet in the United States after the mid-80s?","<student-motivation><social-context>"
"Working around language quirks","<conceptual-frameworks>"
"Testing students on recursion - tracing by hand","<high-school><grading><recursion><exams>"
"Avoiding confusion about precedence","<teaching-analogy><mathematics>"
"The Tao of TeaChing (Making Mistakes in Front of the Class)","<best-practice><teaching-analogy>"
"How to teach algorithms: implementation or application?","<curriculum-design><algorithms>"
"Lab ideas for information theory","<lesson-ideas><labs><information-theory>"
"Book recommendations for rigorous CS books","<self-learning><resource-request>"
"What can the instructor do to overcome the Authenticity Bias in students?","<student-motivation><student-perceptions>"
"Explaining why styling should not be done directly in HTML","<lesson-ideas><web-development><html><css>"
"What should be in a CyberSecurity Course in secondary school?","<security>"
"How do I teach about inequity in computing resources?","<resource-request><social-context><ap-cs-principles>"
"Differentiating Inclusive from Exclusive Or","<boolean-algebra>"
"Dealing with students who are underly-motivated","<student-motivation><differentiation>"
"Does/should a CS education include information about responsible use of human subjects in research","<curriculum-design><ethics>"
"What is a good way to explain computer viruses?","<teaching-analogy><security>"
"Curricular Support for a CyberPatriot Club","<resource-request><security><extracurricular-club>"
"What ethical practices do students (as potential software engineers) need to be trained in?","<curriculum-design><best-practice><ethics>"
"Teaching when to use MyBlocks","<block-based-programming><lego-mindstorms>"
"What can CS educators do to help teachers of other subjects include computing in their teaching?","<cross-discipline>"
"What's a good initial lesson for teaching arduino?","<introductory-lesson><arduino>"
"What are some good real-life examples of pipelining, latency, and throughput?","<teaching-analogy>"
"Should students be taught to be first and foremost: scientists or mathematicians?","<best-practice><mathematics>"
"Books to use for iOS App Development","<curriculum-design><swift><app-development><resource-information>"
"How to best use lab periods","<labs>"
"How to convey how much computing power has grown since the 1960s?","<student-motivation><computer-history>"
"What is a good design for a Capstone Course in CS?","<curriculum-design><undergraduate>"
"Effective ways of teaching regex to students who know Java","<lesson-ideas><regex>"
"How to figure out what I need to search for in order to create a program?","<self-learning><project>"
"Books that summarize pedagogical research within our field","<resource-request><resource-information>"
"What part does formal Ethics training play in your curriculum?","<curriculum-design><best-practice><ethics>"
"Using zyBooks and labs","<java><labs><resource-information><textbook>"
"Which of the following programming languages will help me better to teach the basic concepts of CS and why?","<language-choice>"
"Learning fundamental differences between functional programming and Object Oriented Programming","<self-learning><object-oriented-paradigm><functional-programming>"
"Breaking down the operations when auto-casting gets complex","<data-types><casting>"
"Historical standard order of topics in imperative programming textbooks","<resource-request><resource-information><programming-paradigms>"
"Incorporating algorithmic complexity in grading","<grading><complexity-theory>"
"Strategies for independent learners to identify gaps in their knowledge","<self-learning><conceptual-frameworks>"
"How can I determine if a student would enjoy or has an aptitude for CS?","<student-motivation><introductory-lesson>"
"Ways to advance the field of computer science education as a non-researcher","<resource-request>"
"Teaching OOP in Java, to students who already know Java","<java><resource-request><object-oriented-paradigm><textbook>"
"Independent research on bootcamp job placement claims","<resource-request><adult-education>"
"Strategies for self-learners to transition into working on larger projects","<self-learning><project>"
"How to explain combinatorical principles like the rule of product to students who ""just don't get it""?","<teaching-analogy><mathematics>"
"Good, Motivating Examples for Algorithmic Complexity","<lesson-ideas><best-practice><teaching-analogy>"
"How to introduce Scala to a team of Java developers without being boring?","<introductory-lesson><functional-programming><adult-education>"
"Techniques for encouraging pair programming","<undergraduate><project><pair-programming>"
"Exercises for teaching GUI / Windows interaction basics","<resource-request><windows><gui><c#><.net>"
"Introducing Pair Programming","<introductory-lesson><pair-programming>"
"What hardware can I use when teaching Compiler Language and Assembly Code","<assembly><hardware>"
"Distance or Part-Time Graduate/Doctoral Study","<doctoral-education>"
"Attempting to prevent learning of poor techniques when self-teaching","<self-learning><coding-style>"
"Paper Books or eBooks?","<student-motivation><textbook>"
"Tools or methods to make projected code easier to follow","<classroom-infrastructure>"
"What are some examples that could be used when teaching subroutines or methods in the context of OO?","<high-school><teaching-analogy><ruby><methods>"
"Students can solve programming exercises but not explain their solutions. What to do?","<curriculum-design><resource-request><grading><assessment>"
"What professional development events or conferences are out there for CS educators?","<high-school><resource-request>"
"Intensive basic VBA course - which variables to teach?","<curriculum-design><variables>"
"How to effectively teach strings and string literal constants?","<curriculum-design><lesson-ideas><introductory-lesson>"
"How to teach Stack Overflow more efficiently?","<lesson-ideas><undergraduate>"
"How many lines does your code have?","<project><evaluation>"
"Finishing College with Employable Skills","<student-motivation><careers><student-perceptions>"
"How to answer ""functional programming is useless""?","<student-motivation><functional-programming>"
"IDE vs Editor and terminal for CS1","<python><ide>"
"Workshops on Cloud (Azure)","<curriculum-design><workshops>"
"LINQ to SQL alternative C# Visual Studio 2017 MVC","<lesson-ideas><c#><dot-net-mvc>"
"How can we motivate students to review each other's code?","<high-school><collaboration>"
"How can I effectively manage peer evaluation among my students?","<evaluation><peer-evaluation>"
"Introduction to programming class: use Spreadsheets to introduce fundamentals","<lesson-ideas><high-school><teaching-analogy><introductory-lesson><adult-education>"
"Course for the more practical aspects of software development","<soft-skills>"
"Best Practices for introductory teaching","<best-practice><adult-education><exercises>"
"Teaching a blind high school student","<curriculum-design><high-school><differentiation>"
"Teaching pointers (C) to a Java guy","<undergraduate><c>"
"Teaching C#, Java, etc. to students who are bad at OOP","<curriculum-design><student-motivation>"
"Minecraft to teach programming?","<cs0><minecraft>"
"Good example of what isn't a system call?","<undergraduate><operating-systems>"
"What could be the possible advantages of teaching Scheme as first programming language?","<curriculum-design><language-choice><scheme>"
"Choosing Java-like language for teaching web development","<java><web-development><language-choice>"
"How to teach beginning students how to find and fix syntax errors?","<syntax><cs0>"
"Helping students adjust to using industrial-strength IDEs","<lesson-ideas><ide>"
"Plagiarism checks for source code","<resource-request><plagiarism>"
"Introducing file systems to students who really don't understand","<operating-systems><file-system>"
"Is there any purpose to having students do fiddly cache homework assignments?","<undergraduate><architecture>"
"Does teaching an intro course with a functional language really help level the playing field?","<undergraduate><functional-programming><programming-paradigms>"
"Assisting students with large programming assignments takes too long in class","<classroom-management>"
"What does a person with an undergraduate degree in CS still need to learn to be employable as a developer?","<undergraduate><self-learning>"
"To plan or not to plan that is the question","<project>"
"Is it a good idea to have students see syntax much earlier than they write it themselves?","<best-practice><syntax>"
"Show students the consequences of their design decisions","<curriculum-design>"
"Why don't more universities teach revision control?","<revision-control>"
"Is the CRT still relevant when introducing display hardware","<teaching-analogy><hardware>"
"One lecture on VCS: What needs to be covered?","<revision-control>"
"Mini-Projects that can be covered in an 1 hour Haskell tutorial","<lesson-ideas><project><functional-programming>"
"Functional Programming - using F sharp","<functional-programming>"
"Teaching information security to students without basic IT knowledge","<curriculum-design><security><operating-systems><networks>"
"Scheme - Which implementation to use for teaching","<scheme>"
"Scheme - Which book To Use","<resource-request><scheme>"
"Could you recommend books on concurrent programming?","<resource-request><self-learning><textbook><concurrency>"
"How to motivate game design/development students to do more than the minimum on homework","<student-motivation><homework>"
"Gifted Student Presentations","<student-motivation><differentiation>"
"Giving Students a Break","<student-motivation><adult-education><classroom-environment>"
"Is there a good textbook for writing an interpreter in an imperative language?","<resource-request><textbook>"
"Physical analogy to introduce a Delegate in .Net programming","<lesson-ideas><teaching-analogy><abstraction><.net>"
"What does a certification program for CS high school teachers need to include?","<curriculum-design><adult-education><ap-computer-science-a>"
"Teaching interaction design to potentially disinterested students","<student-motivation><gui>"
"Pick-me-up exercises for after-lunch brain death","<best-practice><student-motivation>"
"Advantages of teaching basic javascript through typescript","<high-school><language-choice><javascript>"
"Is there any value in teaching goto statement or flowcharts?","<flowcharts><goto>"
"Is there any value in teaching pseudo code?","<pseudo-code>"
"How do I convince students to use Boolean algebra?","<boolean-algebra>"
"How to answer questions about how I became interested in programming?","<student-motivation><adult-education><careers><student-perceptions>"
"Example for For vs While Loop (in Java)","<java><introductory-lesson><looping><code-example>"
"Using physical activity to explain the nested for loop","<looping><active-learning>"
"Teaching students that printf() is not the same as return","<teaching-analogy><introductory-lesson>"
"Is it bad to introduce language features in ways that are different than they will be used in practice?","<introductory-lesson>"
"Teaching Arduino---but not just ""monkey see monkey do""","<resource-request><arduino><active-learning>"
"Looking for software that would enable me to cast a screen over LAN","<classroom-infrastructure>"
"How do you assess students' understanding of abstraction?","<assessment><abstraction><computational-thinking>"
"What resources would you recommend for K-5 Computer Systems Concept of the CSTA K-12 Standards?","<resource-request><networks><k-5><primary-school>"
"Is there independent evidence that physical computing improves engagement","<curriculum-design><student-motivation><physical-computing>"
"How to handle objections to the wording of test questions or answers?","<grading><adult-education><assessment><exams>"
"Answering student questions as they work outside class","<student-motivation><classroom-management><communication>"
"Computer Science vs IT vs Digital Literacy","<information-technology><digital-literacy>"
"How to keep students heads from exploding from complex, interconnected topics","<lesson-ideas><databases><data-structure><c#><windows>"
"Going from syntax to CS concepts","<object-oriented-paradigm><syntax><robotics>"
"Peanut Butter and Jelly Ending","<lesson-ideas><student-motivation>"
"Real world example application built with Python and JavaScript?","<self-learning><python><javascript>"
"Encouraging Critical Thinking On Programs Before Students Write Them","<homework><computational-thinking>"
"Teaching Critical Thinking","<curriculum-design><computational-thinking>"
"Making Technical Presentations Safe for Novices","<best-practice><student-motivation><classroom-management>"
"Good resource for practice problems for inductive proofs","<resource-request><induction>"
"Should I share CS jobs stats at a Girls Who Code session?","<outreach>"
"Easy on-boarding for grad students to lead outreach?","<resource-request><outreach>"
"Could physical (i.e. lego) models help teach CS?","<teaching-analogy><introductory-lesson>"
"How to explain the int() function to a beginner","<lesson-ideas><python>"
"Is there some meaningful percentage of students who can't learn to program?","<student-motivation><struggling-students>"
"Encourging Growth mindset, in computing lesson","<student-motivation>"
"Make it easier, and quicker to get to the start","<lesson-ideas>"
"Use of “learnable programming” (via direct manipulation) software, in teaching","<resource-request><programming-environment>"
"How can we educators improve a lot of the negative behavior within the CS community","<introductory-lesson>"
"How to prevent dictating the solution when tutoring","<undergraduate>"
"How should I respond to a student who proposes a ""weak"" analogy?","<high-school>"
"What is the pedagogical value of Conway's Game of Life?","<ap-cs-principles>"
"Computer Engineering student with Holes in my knowledge (i want to improve)","<best-practice><resource-request><self-learning><struggling-students>"
"Teaching intermediate Java to students familiar with C","<teaching-analogy><java><c>"
"Help in choosing elective subject","<java><image-processing>"
"Research on gender and attainment in CS","<resource-request><attainment>"
"Equivalent of PISA study for standardised assessment of skills on computational thinking and programming?","<assessment><computational-thinking>"
"Clear example of the Object-Relational Mismatch","<teaching-analogy><object-oriented-paradigm><databases>"
"Teaching students how to construct regular expressions (and other ""translation"" style problems)","<lesson-ideas><regex><discrete-math>"
"Teaching NFAs after DFAs","<regex><discrete-math>"
"Online courses to form or improve a CS resume?","<self-learning>"
"Conflicting meaning, between exam board / teaching resources, and technical meaning","<exams>"
"Engagement advice on Creative computing","<student-motivation><scratch><game-design>"
"Toy Databases for Class Examples/Homeworks","<resource-request><databases>"
"How do I construct a basic lesson on computational complexity and undecidability?","<lesson-ideas><algorithms>"
"Best Git strategy for workshop code (starter -> end solution)","<git>"
"Search for a useful interactive programming environment","<resource-request><programming-environment>"
"Is there a textual alternatives to UML diagrams?","<documentation>"
"Explaining the Value of Knowledge of Digital Logic","<student-motivation>"
"Agile / SCRUM Course Structure: Downsides? Resources?","<curriculum-design><resource-request>"
"""Franklin"" Method for learning good programming?","<self-learning>"
"A lab activity for the Y-Combinator","<labs><lambda-expressions>"
"How to stop being The Oracle","<classroom-management><labs><active-learning>"
"Resource recommendations for teaching OOP via a practice-oriented example","<object-oriented-paradigm>"
"What's the best way to assess programming?","<assessment><imperative-programming>"
"Paired programming with an odd number of students","<pair-programming>"
"Single-dimensional array and simple looping activities of significance","<labs><algorithms><cs-theory><looping><arrays>"
"Quick and easy intro to computer science for kids for an Engineering Field Day","<lesson-ideas><active-learning><k-5>"
"Enjoyable and\or fun way to explain cmake","<lesson-ideas><c><cmake>"
"The order of questions on examinations","<exams>"
"What should be included in a best practices C course?","<curriculum-design><best-practice><coding-style><c>"
"A better database management system, for teaching databases","<resource-request><databases>"
"What is a (simple definition of) a development environment?","<ide><programming-environment>"
"Where, sequentially, do Interfaces sit in an introduction to Objects?","<curriculum-design><object-oriented-paradigm><interface><lesson-order>"
"Reducing bias, from lesson that improves, as taught to a number of classes","<best-practice><bias>"
"Is it possible to teach selection (`if`) before variables","<best-practice><lesson-order>"
"Advantages and Disadvantages of Teaching Block-coding Languages Such As MIT's App Inventor?","<block-based-programming><app-inventor>"
"Allowing students to work cooperatively on a computer, and retain access to their work","<collaboration>"
"Teaching C++ to students that know Java","<curriculum-design><java><undergraduate><c>"
"What are good class exercises on design patterns?","<classroom-management><exercises>"
"How far do you take modular expressions?","<mathematics>"
"What student exercises force them to modify and extend their own thinking process and methods?","<lesson-ideas>"
"Is it possible to study too many things in parallel?","<student-motivation><self-learning><student-perceptions><struggling-students>"
"Using Oracle's Java Documentation as a Teaching Tool","<java><undergraduate><ap-computer-science-a>"
"What are good examples that actually motivate the study of recursion?","<lesson-ideas><recursion>"
"Big-endian, Little-endian","<lesson-ideas>"
"Teaching zip and range in Python 3","<python>"
"Motivation for learning C++ when you know Java","<student-motivation><java><language-choice><c++>"
"Merits of teaching VCS as enrichment","<high-school><project><revision-control>"
"Programming language for teenagers","<language-choice><scratch>"
"Opening a machine learning course in high school","<high-school><machine-learning>"
"Popular demonstration of cryptographic tools","<high-school><security><cryptography>"
"Using questions from a code-competition website in homework and exams","<exercises><resource-information><homework><exams>"
"How to explain the concept of a variable to a 9-year old?","<lesson-ideas><variables><scratch>"
"Is it worthwhile to teach assembly nowadays?","<assembly>"
"Is there any pedagogically motivated reason to teach quadratic probing?","<lesson-ideas><algorithms><data-structure>"
"How to teach image processing and computer graphics to a blind student?","<image-processing>"
"Pedagogical reasoning behind a minor difference in two loops","<looping><imperative-programming>"
"Finding tutoring in Maths / CS","<self-learning><struggling-students>"
"What are good resources for self learning Finite Mathematics for a CS Student?","<resource-request><self-learning><finite-mathematics>"
"Simple explanation of JPEG working principles","<lesson-ideas><high-school>"
"Order to teach looping constructs in a non ideal language","<looping><lesson-order>"
"When does excessive collaboration become plagiarism?","<plagiarism><collaboration>"
"How to START an Objects-First Course","<object-oriented-paradigm><objects-first>"
"What are the core concepts of discrete mathematics within CS?","<high-school><undergraduate><discrete-math>"
"Encourage students to learn and use advanced design","<student-motivation><object-oriented-paradigm><abstraction>"
"Answering “How is this useful to me?”","<student-motivation>"
"Is there evidence of differences in the outcomes of objects-early vs objects-late?","<curriculum-design><java><object-oriented-paradigm>"
"How do teachers motivate students to persevere and learn?","<student-motivation><classroom-environment>"
"What Notation for Teaching Boolean Logic?","<boolean-algebra>"
"Object Design Lab","<lesson-ideas><object-oriented-paradigm>"
"How widespread is the use of the PEP/8 assembly simulator in education?","<assembly>"
"Explaining to students why to use double instead of float (unless there's a very good reason)","<data-types><secondary-education><floating-point>"
"Boolean Logic: How to Explain + as OR?","<lesson-ideas><introductory-lesson><boolean-algebra>"
"How to avoid misconceptions about while loop when using null loop","<algorithms><robotics><pltw>"
"The Fifth Element or What Elements Are Correlated With CS Success and Does It Matter?","<student-motivation>"
"App Lab/JS confusion between strings and variables","<high-school><ap-cs-principles><syntax><variables><javascript>"
"NodeJS and Javascript libraries are overwhelming students","<project><javascript><secondary-education>"
"How do you teach something when you don't know it yourself?","<best-practice>"
"How to phrase questions about spotting design issues in programs","<programming-paradigms><evaluation><exams>"
"Textbooks: Yes, no, roll your own?","<textbook>"
"What are the tradeoffs of allowing students to submit test corrections?","<best-practice>"
"Blockchain cipher suitable for preschoolers","<resource-request><cryptography><preschool>"
"How to help students comprehend the HTML document flow?","<best-practice><web-development><front-end><css>"
"Should I teach that 1 kB = 1024 bytes or 1000 bytes?","<best-practice><architecture>"
"Is it bad to force my students not to return early?","<best-practice><high-school>"
"Is stressing too much on formalism acceptable?","<lesson-ideas><struggling-students>"
"My teacher said that java is pass-by-reference when the type is not a primitive","<java>"
"The Starting Gun vs Freedom of Choice","<curriculum-design>"
"How do you deal with Lone Rangers in group projects?","<best-practice><high-school><project><classroom-management>"
"Use of jshell in AP CS A","<lesson-ideas><java><ap-computer-science-a>"
"Which non-programming skills help make a good programmer?","<careers><soft-skills>"
"A meaningful exercise that requires using a destructor","<object-oriented-paradigm><exercises><homework><c++>"
"Usefullness of Study Guide","<struggling-students><student-perceptions><materials-review>"
"Should I Provide Answers To Exercises?","<curriculum-design><exercises>"
"What are the advantages and disadvantages of cumulative vs percentage grading?","<best-practice><grading>"
"How Effective Is ""Rosetta Code"" as a Teaching Technique?","<best-practice><teaching-analogy>"
"How to help students avoid being distracted by bells and whistles","<labs><c#><gui>"
"What should be included in student portfolios for CS?","<best-practice><high-school><undergraduate><careers><github>"
"An exercise in utility","<grading>"
"What IF Thinking","<conceptual-frameworks>"
"How do you teach Big O to high schoolers with varying degrees of math exposure?","<curriculum-design><lesson-ideas><high-school>"
"Test takings strategy tragedy","<exams>"
"For a beginner, is it better to start with C or a higher level language?","<curriculum-design><self-learning><language-choice>"
"Resubmitting Projects","<grading><project>"
"How to give assignments that require heavy computational resources?","<project><artificial-intelligence><programming-environment>"
"How can we teach good naming practice for students learning Java?","<best-practice><java>"
"What are healthy, productive ways to encourage students to progress to more advanced constructs as opposed to staying with the familiar?","<curriculum-design><student-motivation>"
"What resources and data sets are available for teaching big data courses?","<labs>"
"What are ""general purpose programming skills""?","<high-school>"
"How can I speed up the construction of high quality testing materials?","<assessment>"
"""Computer sciency"" and ""practical"" exercices involving dictionaries","<lesson-ideas><algorithms>"
"How to collect and grade Xcode work","<grading><assessment>"
"Lab Requirement in AP CS A","<labs><ap-computer-science-a>"
"What screencasting tools can be used for online teaching","<lecture-tools>"
"Resources for the Praxis CS Test","<high-school><resource-information><praxis>"
"What are the advantages/disadvantages of teaching how to implement Nodes, Linked Lists, Stacks, and Queues before showing built-in implementations?","<data-structure>"
"Criteria for admission to AP CS courses in high school","<ap-computer-science-a><ap-cs-principles>"
"Process Scheduling is not ""Process"" Scheduling - Should I disclose it to students?","<curriculum-design><best-practice>"
"Once implicit/inferred typing is introduced, how can I impress upon students the importance of not abusing it?","<data-types>"
"Interesting Programming Exercises to Teach Inheritance?","<lesson-ideas><object-oriented-paradigm><python>"
"Should we merge technology departments with the science departments?","<curriculum-design>"
"Constructing a curriculum from multiple resources for complex subjects","<curriculum-design><lesson-order>"
"How Can I Explain The Concept Of Zero Knowledge Proofs To Students","<cryptography>"
"Is it better to lie to students or to be pedantic when teaching Intro CS?","<best-practice>"
"Is it ok to use logic programming(like Prolog) as students' first language?","<language-choice>"
"Is there a better way to validate student learning?","<self-learning><undergraduate><project><exams><collaboration>"
"Will you tell students that Algorithms + Data Structures = Programs now(21st century)?","<algorithms>"
"Should I correct mistakes in student presentations?","<best-practice>"
"Use of programming aptitude test in CS program admission","<admission-requirements>"
"How to teach sums and asymptotics to students who don’t know limits","<lesson-ideas><mathematics>"
"Why isn't Functional Programming Taught First?","<curriculum-design><undergraduate><functional-programming>"
"Research into the use of symbol names, in programming, and how it affects learning","<best-practice><introductory-lesson>"
"Statistics on functional programming in CS1","<functional-programming>"
"Can assignments be graded using blockchain?","<assessment>"
"Student Teaching Minetest Modding in school as club","<high-school><resource-request><game-design>"
"How to teach a person to enjoy programming?","<student-motivation>"
"At what age should someone know what they want to ""be""?","<student-perceptions><secondary-education>"
"How can we best inform potential students of the nature of CS?","<student-motivation><admission-requirements>"
"What physical examples can I use for public key/asymmetric encryption?","<cryptography>"
"Are there companies that allow to be free when learning and teaching?","<self-learning><careers>"
"Best Way to Explain Distinction Between Void vs. Return Functions in JavaScript","<javascript><methods>"
"What are the pedagogical methods for teaching programming?","<student-motivation><best-practice>"
"The confusing Unix permissions terminology","<adult-education><command-line>"
"Difficulty of algorithms homework problems","<undergraduate><algorithms><homework>"
"How can Chatbots be useful in CS education?","<student-motivation><resource-information>"
"Textbook on Optimization","<resource-request><self-learning><textbook>"
"Becoming a master from a newbie at Computer Science and Electronics","<resource-request><textbook><careers>"
"Courage to Attack Difficult Questions","<student-motivation>"
"How to structure a Predictive Keyboard project similar to GBoard","<lesson-ideas><algorithms><cs-theory><data-structure><artificial-intelligence>"
"Looking for puzzle/game programmes, so students can write solvers","<resource-request><programming>"
"What advantages do students who learn how to touch type have?","<best-practice>"
"Would it be beneficial to learn computer science (or other computer related stuff) from 5-6 year old material?","<resource-information><exams>"
"Students frequently distracted by peers and games","<classroom-management>"
"How do people prefer to learn web development - videos or text?","<self-learning><web-development>"
"Easy to use database for HS students","<web-development><databases><sql>"
"Are programming contests beneficial to students?","<best-practice><project>"
"How important is it that I know all of the words for the technical terms when mentoring in my second language?","<scratch>"
"What are the ""intangibles"" that distinguish one university's CS program from another?","<undergraduate>"
"Advice for becoming more confident in programming","<self-learning>"
"Best way to pass on the problem solving experience","<web-development><debugging><industry-training>"
"Teacher Community - Using CS50 for AP","<ap-cs-principles>"
"In self-teaching, how can I move from basic tutorials to more complex work?","<self-learning><sql>"
"Where one can learn CS in very rigorous way?","<self-learning>"
"How to retain technical information about new features?","<self-learning>"
"How is computer science (and education) different today than some decades ago?","<programming-paradigms>"
"What can be the causes of the difference in student performance?","<high-school><self-learning><primary-school>"
"Why are pointers a key topic in a CS curriculum and oft cited as something people don't get?","<pointers>"
"Short foundational lessons for 7-8 year olds","<lesson-ideas><computational-thinking>"
"How Can I Apply Spaced Repetition To Teaching CS?","<curriculum-design>"
"Study Advice for a CS Student","<student-motivation><self-learning><undergraduate>"
"Why do we count starting from zero?","<arrays>"
"Book recommendation: basic, broad and solid overview for advanced learners","<introductory-lesson><textbook>"
"How to convince students that self learning is an important skill?","<self-learning><web-development><adult-education><documentation>"
"Small to medium scale exercises about Haskell's higher abstractions","<lesson-ideas><resource-request><functional-programming><exercises>"
"How to give students practice with streaming computation?","<lesson-ideas><resource-request><python>"
"Will I Regret Using Python As A Teaching Language When I Later Need to Teach Static Typing?","<python>"
"What belongs in a low-math undergraduate AI elective besides ML?","<curriculum-design><undergraduate><artificial-intelligence>"
"Lab ideas for set theory","<lesson-ideas><labs>"
"Methods for engaging students when teaching unpopular or unfashionable topics","<student-motivation><social-context><student-perceptions>"
"Python function has access to global variables, and doesn't need passed arguments","<lesson-ideas><python>"
"How to gamify the learning management system","<student-motivation><adult-education><resource-information><active-learning>"
"Software to produce an interactive presentation?","<python><lecture-tools>"
"Data and Database modelling books","<self-learning><databases><data-types>"
"How would you explain what is a race condition to a five years old","<lesson-ideas>"
"Example for Introduction to Generics in Java","<java><data-structure><data-types><generics>"
"Need a good ""streaming"" software for coding tutorials/workshops","<workshops>"
"First project in my second year data structures intro","<java><project><algorithms><data-structure>"
"Mental Model of Type Conformance/Subtype Polymorphism","<java><object-oriented-paradigm><polymorphism>"
"Project based on game 2048","<java><undergraduate><project><algorithms><data-structure>"
"What is the difference between computer science and computer engineering in brief","<computer-history><programming>"
"Explaining why arrays are important for statisticians","<student-motivation><python><struggling-students>"
"Beginner Javascript course - recommended books","<resource-request><javascript><html><css>"
"What are Macros in programming language am little bit confuse . why we use them for which perpose?","<functional-programming><programming-paradigms><programming-environment>"
"Exercise or example to reinforce idea of functions?","<best-practice><teaching-analogy><exercises>"
"Why does array index not start from -1 why have indexes to be positive?","<arrays>"
"Teaching binary to 6-8 year olds","<introductory-lesson>"
"Improve motivation in the final part of a project based course","<student-motivation><project><evaluation>"
"How can I remain a programmer and move into currently ""hot"" areas?","<self-learning><programming>"
"What is good age to start learning programming?","<programming>"
"Best way to install and maintain windows 10 in a computer lab","<classroom-management><windows>"
"Is it okay to teach C++ to my 7 year old brother?","<java><language-choice><programming><c++>"
"Should one study programming by doing hard problem?","<self-learning>"
"Java or Kotlin for beginners (procedural programming knowledge is existing)?","<java><programming><kotlin>"
"Learning disabilities as a barrier - should I stop learning?","<student-motivation><self-learning>"
"Standardization of software","<programming><c++>"
"Why some students think that programming is difficult and hard to learn, how I convince my students that programming is not difficult as they think?","<best-practice><student-motivation><programming>"
"Making induction meaningful","<student-motivation><induction>"
"What makes a good explanation?","<exercises>"
"Why do educators not set an upper bound for the amount of times we're allowed to compile code?","<programming><debugging>"
"Why and how is it efficient to process sorted arrays than unsorted arrays?","<java><c>"
"Advise on a class project","<lesson-ideas><teaching-analogy><project><ap-computer-science-a><coding-style>"
"What is the best way to learn an object oriented programming language with framework, data structure and alogrithms?","<self-learning><python><programming>"
"Should programming assignments be graded based on results from unit tests or based on the similarity to the correct implementation?","<grading><homework>"
"JavaScript to teach Theoretical Computer Science","<javascript><cs-theory>"
"How can I improve my understanding in Computer Science?","<student-motivation><self-learning><struggling-students>"
"Code highlight for classroom use","<lecture-tools>"
"How can I set up and deliver a Computer Hardware Course for the first time?","<curriculum-design><high-school><information-technology>"
"Do you know of a complete textbook for teaching databases?","<resource-request><databases><textbook>"
"How to explain ETH to undergraduate students?","<complexity-theory>"
"How to write a grading rubric for coding assignments?","<grading>"
"How to learn to program compiled languages efficiently when coming from an interpreted language?","<self-learning><programming><c++>"
"What is a good teaching example/application for jagged arrays (2d arrays with irregular row lengths)?","<lesson-ideas><high-school><labs><ap-computer-science-a><arrays>"
"How to learn to solve trees, graphs questions for competitive programming","<self-learning><algorithms><data-structure>"
"Any simple Python GUI projects for beginner/novice programming students?","<project><python>"
"Quizzes after lectures","<classroom-management><assessment><lecture-tools>"
"Which image rotation libraries use the Paeth algorithm?","<image-processing>"
"Curriculum choice for AP Computer Science A","<high-school><java><ap-computer-science-a><curriculum-review>"
"Is learning C++ recommended for beginners?","<self-learning><c++>"
"latest Book (2018/19) for Computer Science for Grade 2 to 8 students","<textbook>"
"What's a good unit testing assignment for Android?","<labs><unit-testing>"
"C# Array Lesson Plan","<c#><lesson-review>"
"Students seem to be unable to use code to express their ideas. Is the teaching methodology improvable?","<programming><lesson-order>"
"Angular vs React vs Vue","<programming><javascript>"
"Using online courses instead of / in addition to traditional lecturing","<classroom-management>"
"Automatic grading of test-cases","<grading><auto-graders><unit-testing><information-technology>"
"How bad is a Computer Science course that doesn't teach Design Patterns?","<curriculum-design>"
"Online Code Review Scripts Like Udacity","<grading><programming><lesson-review>"
"About the ACM and IEEE-CS Computing Curricula","<curriculum-design><self-learning><curriculum-review>"
"Do some websites block school building/classroom IP networks because they mistake us for possible DDOS?","<classroom-infrastructure>"
"Is the algorithm-recipe analogy a good or a bad one?","<teaching-analogy>"
"How to teach operating systems development nowadays?","<operating-systems>"
"Examples of innocent looking faulty code for shock effect","<lesson-ideas><code-example>"
"Turtle examples for loops and variables, or even something else","<lesson-ideas>"
"How do you teach Theory of Automata / Formal Language Theory / Computation Complexity?","<lesson-ideas><student-motivation>"
"Teaching Revision (Change) Control Systems In High School CS Classes","<curriculum-design><revision-control><github><git>"
"What are the essential ideas that students need to know about Artificial Intelligence?","<artificial-intelligence>"
"What teaching techniques can be used, in teaching students from a medical background, to improve their programming?","<student-motivation><teaching-analogy><programming>"
"Thoughts on language for Intro to Data Science?","<curriculum-design><language-choice>"
"How can I get through very long and very dry, but also very useful technical documents when learning a new tool?","<self-learning>"
"How do I deal with students being unkind to each other when I'm not there?","<student-motivation><collaboration><classroom-environment>"
"open source MOOC platforms","<grading>"
"how to motivate student that programming will give bright future to them?","<student-motivation><self-learning><programming>"
"How to make project in java language, for students who doesn't know java?","<self-learning><java><project><programming>"
"How can programming skills be improved?","<self-learning><programming><struggling-students>"
"Pedagogical issues with Stack Implementation","<algorithms><python>"
"Suggestions for teaching selection sort with candy","<lesson-ideas><undergraduate>"
"What is a file?","<operating-systems><file-system>"
"Concrete example for polymorphism use?","<polymorphism>"
"How to teach C++ language to beginners of (BSCS) students who have no any idea about it?","<programming><c++>"
"How to introduce Kotlin in a Programming Languages course","<introductory-lesson><functional-programming><kotlin>"
"AP Computer Science Principles and Unity","<ap-cs-principles><game-design>"
"how can i build up interest in learning some dry but important subjects of BS(CS)?","<student-motivation><self-learning><computational-thinking>"
"Why do computer-science majors learn calculus?","<mathematics>"
"How can I improve other programming languages while having command on one language","<self-learning><programming><computational-thinking>"
"Hardware (cameras, headsets) for TEALS supported classrooms","<high-school><ap-computer-science-a><ap-cs-principles>"
"Why Computer Science students learn Digital Logic Design?","<programming>"
"Should an educator define terms rigorously?","<teaching-analogy>"
"How can I do the best assignments as being a computer science student?","<self-learning><assessment><soft-skills>"
"How to make students confident enough to stop copying each other's code assignment?","<student-motivation><struggling-students><cheating>"
"Discrete function is also a math function?","<functional-programming><mathematics>"
"How can I build up the understanding of a project?","<undergraduate><project><resource-information><computational-thinking><active-learning>"
"Hand-on ideas on tutorial on setting up a cloud-based server","<curriculum-design><workshops>"
"Through what basic programming language can beginners easily get the concept of programming?","<student-motivation><best-practice><programming>"
"How to introduce problem solving to primary school pupils?","<lesson-ideas><teaching-analogy><algorithms><primary-school>"
"On studying Computer Science vs. Software Engineering to become a proficient coder","<curriculum-design><undergraduate><programming>"
"How does IB Computer Science compare with AP Computer Science?","<ap-computer-science-a>"
"How to make perfect documentation of FYP with less plagiarism?","<student-motivation><computational-thinking><struggling-students>"
"What technique should be used to make video tutorial for BS(CS) students?","<student-motivation><struggling-students><active-learning>"
"Why do computer science students learn electronics and electric circuit analysis?","<programming>"
"How to create webpage slides for teaching?","<resource-request><lecture-tools>"
"How to teach so that your student doesn't feel stupid?","<programming><methods>"
"How To develop One's Interest in Programming","<lesson-ideas><programming>"
"How to make sequence diagram?","<curriculum-design><methods>"
"What are some good problems which can be solved with a queue?","<student-motivation><data-structure>"
"What do I do if my computing teacher does not teach the subject properly?","<high-school>"
"Projecting the In- class demo screen","<coding-style><classroom-infrastructure>"
"What to do when pupil destroy lab equipment?","<classroom-management><classroom-environment>"
"Are there any resources out there to continue developing my students' programming skills after Code Combat","<resource-request>"
"How can you efficiently assess students web coding?","<assessment><javascript><html><css>"
"Recent Graduate becomes a teacher","<lesson-ideas><student-motivation><best-practice>"
"Is it easy for professors to get academic versions of software from IBM?","<resource-request>"
"Are There Exercises To Build Software Development Research Skills?","<active-learning>"
"What do A-level students, that have not done GCSE, struggle with?","<curriculum-design>"
"End of Year Movies For CS Classes","<resource-request><computer-history>"
"Shallow, broad and general introduction to programming","<curriculum-design><high-school>"
"Creating Interactive Gnu/Linux shell programming courses","<curriculum-design><resource-request>"
"Assignment repositories","<lesson-ideas><resource-request>"
"Publication outlets for research by undergraduates?","<publications>"
"Python IDE for beginners","<best-practice><python><adult-education><ide>"
"How can we determine which students are a good fit for an educational program?","<best-practice><undergraduate><assessment><student-perceptions><outreach>"
"Is it a good idea to teach algorithm courses using pseudocode instead of a real programming language?","<algorithms>"
"Array or vector? Two dimensional array or matrix?","<arrays>"
"What is a good introductory language for high school?","<high-school><language-choice>"
"Framework vs Vanilla JS for students","<web-development>"
"How should one go into learning algorithms and data structures? What do you think is an efficient way to do so?","<self-learning><algorithms><data-structure><active-learning>"
"Why teach C using scanf without talking about command line arguments?","<programming><c>"
"A real world example for the divide and conquer method","<teaching-analogy><algorithms>"
"This question is for anyone who has read Introduction to Algorithms by MIT press 3rd edition - Exercises, how to make them easier?","<self-learning>"
"What is the closest pair problem useful for?","<student-motivation><algorithms>"
"Method for keeping records in a computer science notebook?","<self-learning><adult-education><notes>"
"Classification of programming exercises","<student-motivation><teaching-analogy><student-perceptions><static>"
"Abstract data type that has ""include"" ""remove"" and ""is in"" and only those","<data-structure><data-types>"
"How to recast an ASPX application as Object Oriented","<object-oriented-paradigm><web-development><databases><programming-paradigms><server-client>"
"Spring core exercices","<self-learning><resource-request><java><exercises>"
"Any relevant research in Motivation?","<student-motivation><struggling-students>"
"Explain to someone that programming isn't just all ""if""s and ""else""s","<programming><adult-education>"
"Abreviation of practical work assignment?","<labs>"
"System to validate run time complexity requirements","<algorithms><grading>"
"Tell me a book ( or resources) for creating a good terminal based workflow (for building, debugging) for c++ based project development","<self-learning><resource-request><c++>"
"What are competitive programming problems that require a tree data structure to solve them?","<algorithms><data-structure>"
"Interfaces and Greenfoot","<ap-computer-science-a><interface>"
"Open Source Training","<industry-training>"
"Understanding Introduction to Algorithms, 3rd Edition","<resource-request><algorithms><data-structure>"
"What's the benefit of prohibiting the use of techniques/language constructs that have not been taught?","<programming><project><homework>"
"Hackerrank challenges for a programming course: hide code and show only what is relevant?","<programming>"
"what would be a best approach to teach programming to non CS major?","<programming>"
"Programming exercise Tagging","<resource-request><struggling-students>"
"methods early in Java - before objects","<java>"
"Teaching data structures with C++: should I go with smart instead of raw pointers?","<pointers>"
"Software tool as in Bret Victor's demo","<student-motivation><student-perceptions><lecture-tools>"
"Learning to program a Cell Phone","<curriculum-design>"
"Any auto grading site that supports all-testcases-in-one-file (and/or in github)?","<resource-request><auto-graders><unit-testing>"
"Teaching past the ""symbology"" of a language","<teaching-analogy><struggling-students>"
"Fun way to teach algorithms","<algorithms>"
"Want to be good at programming (C++) and then start learning game development, where should I start?","<programming><active-learning><c++>"
"Research question thesis","<programming>"
"Is there any series of videos in which all the main algorithms are discussed without going into things like time complexity and space complexity","<programming><algorithms>"
"A category to classify expressions, statements and blocks","<programming><syntax>"
"What are some non-CS concepts that can be defined using BNF notation?","<teaching-analogy><introductory-lesson><adult-education><syntax><layperson>"
"Did the spread of smartphones increase or decrease general computer literacy?","<digital-literacy>"
"Any website/textbook with problems+solutions in algorithms?","<programming><algorithms>"
"How to learn computer science from bottom to up?","<self-learning>"
"Is there any formal education for programming? Other than a CS degree?","<programming><adult-education>"
"Is there a good book for combinatorics for programmers?","<self-learning><resource-request><discrete-math>"
"Coding bootcamp vs. computer science","<undergraduate>"
"How do you distinguish jargon from normal language in explaining a concept?","<best-practice><undergraduate><computational-thinking>"
"Students' confusion over C structure members and structure variables","<best-practice><teaching-analogy><programming><c><c++>"
"Need review of course content: Javascript History and Capabilities","<javascript><curriculum-review><lesson-review><materials-review>"
"Analogy to teach beginners the concept of interrupt","<teaching-analogy>"
"Undergraduate Computer Science Projects","<project><computational-thinking>"
"Platform for annotating students' code assignments","<classroom-management><assessment><classroom-environment>"
"How might I structure an assignment with two ""levels""?","<lesson-ideas>"
"Simple, Compact, Rounded Definition of the term ""Programming Construct""","<student-motivation><high-school><introductory-lesson>"
"Setting up a cloud-server SSH login procedure for a class? (AWS)","<resource-request><classroom-infrastructure>"
"How do you wow second-year students into saying ""bare-metal programming is cool!""?","<student-motivation><assembly><architecture><hardware>"
"How to construct non computer-based, Paper Parsons Problem","<lesson-ideas><resource-request><labs>"
"Research On Teaching A Second Programming Language/Paradigm","<scientific-papers>"
"Languages class in high school","<high-school><curriculum>"
"JavaFX and console-based interfaces, at the CS1 level","<java><undergraduate><programming><javafx>"
"Materials on database indexing with examples","<resource-request><databases>"
"Does it make sense to write tutorial when content of the tutorial can be already learned from internet without that tutorial?","<lesson-ideas>"
"What is the best approach to learning things in CS?","<student-motivation><self-learning><struggling-students><active-learning>"
"What are the basics of CS that I should know, before I start my journey into machine learning","<self-learning><artificial-intelligence><machine-learning><documentation>"
"What is the point of teaching coding and robotics to kids as young as six years old?","<programming>"
"Solutions to problems from Algorithms Jeff Erickson","<algorithms>"
"Is less than comparison more natural than greater than comparison?","<best-practice>"
"How to teach linear programming and reductions?","<programming><algorithms>"
"Would you mentor other people for free/voluntary donations?","<adult-education>"
"Order of learning formal languages, automata, compilers and parsing","<curriculum-design>"
"How do you teach when your students have wildly different backgrounds?","<lesson-ideas><best-practice><web-development>"
"What is the best way to teach JavaScript functions to middle schoolers?","<introductory-lesson><javascript><lesson-review>"
"Is it worth to learn to make a MD5-hash cracker?","<algorithms><exercises>"
"How can we measure proficiency in programming languages?","<assessment><c>"
"How to make someone enjoy programming if they don't like the products they make?","<lesson-ideas><student-motivation>"
"What are some real life applications of the knapsack problems class?","<teaching-analogy><algorithms>"
"An Intro to CS course in C++ for CS majors: laying a solid low-level foundation or simple tools and algorithmic thinking?","<c++>"
"How to verify that code you write is not copyrighted anywhere?","<programming>"
"How can I teach the students a package/module in a computer lab?","<curriculum-design><labs><exercises>"
"What would be your ideal first lecture in a databases course?","<teaching-analogy><databases>"
"What is the CS Analog To Learning One's Multiplication Tables?","<programming><introductory-lesson>"
"Putting feedback comments on source code when grading","<grading>"
"Computer Science in the Waldorf curriculum","<curriculum-design><social-context>"
"How to prevent organization/OS students from becoming premature optimizers?","<coding-style>"
"I struggle to understand technical things in cs? What can I do to improve?","<self-learning><struggling-students>"
"Which are common misconceptions about code execution? How to efficiently debug my student?","<exercises>"
"An example that compares a computational with a non-computational thinking approach","<computational-thinking><code-example>"
"Robotics Recommendations","<block-based-programming><robotics>"
"Suggested fliers for high school career fair?","<student-motivation><high-school><careers>"
"Learning suggestions for AI and neural networks for a mathematician","<self-learning><resource-request><artificial-intelligence>"
"Should I start out as a “junior developer”?","<careers>"
"Is the CS50x course enough to get the generic knowledge of a CS grad?","<self-learning><curriculum-review><curriculum>"
"Is there a free platform to host coding challenges within a class?","<assessment>"
"Physical Activity for Objects","<lesson-ideas><introductory-lesson><object-oriented-paradigm>"
"Debugging a submission that works well on student's computer but not on my computer","<programming><c++><homework><debugging>"
"What do programming novices need to know when using MatLab?","<programming><introductory-lesson>"
"Explaining Event-Driven Programming in the context of the Structured Programming Theorem","<block-based-programming>"
"How can I design online tests and prevent cheating?","<high-school><exams><lecture-tools><distance-learning><cheating>"
"What evaluation methods can be used that don't involve testing but are adaptable to online courses","<evaluation><distance-learning>"
"Tools for running classes remotely","<lecture-tools><distance-learning>"
"Which topics should one cover in teaching a course titled “Artificial Intelligence and Machine Learning”?","<artificial-intelligence><machine-learning>"
"Distributed Pair Programming in distance education","<pair-programming><distance-learning>"
"Training students to give better feedback, when remote teaching","<distance-learning>"
"HS Lessons On Modeling Virus Spread","<lesson-ideas><distance-learning>"
"How to limit access to tests on Blackboard?","<exams>"
"Counter-Example for Computability","<lesson-ideas>"
"Advising college students about whether to take classes pass/fail","<undergraduate><advising>"
"Online classes: Any good ways to avoid having too many interruptions but at the same time not leaving anyone behind?","<online>"
"Seeking advice on mentoring without participating in exam cheating in the new chaotic environment of the pandemic","<exams><cheating><mentoring>"
"What ""process instruction"" should instructors give students when assigning a team project?","<group-work>"
"Looking for a simple, offline, portable, lightweight IDE for C++ with a compiler and debugger","<c++><ide>"
"Is it OK to use ""informal"" systems such as TeamSpeak or Discord to support classes?","<student-motivation><distance-learning>"
"A beginner example of xor, that is functional (does not switch to procedural)","<boolean-algebra>"
"(FOSS) Application to show/explain compilation?","<resource-request><compiling><language-types>"
"What language best prepares a high school student for a STEM undergraduate major?","<programming>"
"Detailed lecture series for automata theory or theory of computation","<self-learning><resource-request>"
"How to learn web design if backround is on mathematics and data analysis?","<self-learning><web-development><html>"
"How do I teach problem solving and logical thinking to students of age group 12-18yrs through online session","<lesson-ideas><teaching-analogy><problem-structure>"
"Computer Science Theory with Haskell?","<resource-request><cs-theory><complexity-theory>"
"Is it necessary or advisable to teach text-based input and output in a non-CS intro programming course?","<programming><introductory-lesson>"
"How to design a cloze test for a programming language?","<programming><exams><c++>"
"What thought process would lead one to invent object-oriented programming?","<object-oriented-paradigm>"
"Coding assignments for algorithms and data structures?","<algorithms><data-structure><code-example>"
"Any website or textbook with problems/solutions for Computer Science Theory?","<textbook><cs-theory>"
"In what branch of science does technology belong?","<computer-history>"
"Is there a word for mathematics/physics/data-analytics/....?","<curriculum>"
"How can I find someone online to mentor me on my first research paper?","<struggling-students><collaboration><scientific-papers><mentoring>"
"Are there any recommended tools for teaching syntax and grammar of programming languages?","<programming><syntax><programming-paradigms>"
"Study the book ""Computer Architecture- A quantitative approach"" (3rd Edition) for the first time","<self-learning><resource-request><textbook><architecture>"
"Detailed video lecture series that follows ""Computer Architecture: A Quantitative Approach"" by Henessy Patterson","<self-learning><resource-request><architecture>"
"Any good beginner tutorials for learning LLVM","<self-learning><compiling>"
"Software development vs universities and scientific papers","<mathematics>"
"How to embed TIC-80 into Computer science 101 course","<high-school><teaching-analogy><programming-paradigms><abstraction>"
"Book recommendations for self studying Data Structures in depth in an elegant manner","<self-learning><resource-request><textbook>"
"How can I prepare for DASCA Data Science certification if I am in UG?","<mentoring>"
"Java: The Complete Reference, which edition to follow","<self-learning><java><textbook>"
"Error free solution manual for ""Introduction to Algorithms"" by Cormen et al. for self study or alternative method to tackle them single handed","<self-learning><resource-request><algorithms><textbook>"
"The theory of parsing, translation, and compiling, v.s. Compilers: Principles, Techniques, and Tools?","<textbook><compiling>"
"Principles of Compiler Design v/s Compilers: Principles, Techniques and Tools by Aho, Ullman","<self-learning><resource-request><textbook><compiling>"
"How useful it is for math student to learn programming to find proofs or counterexamples?","<programming><mathematics>"
"Problem book for Haskell course","<textbook><functional-programming><homework>"
"Teaching an absolute beginners class Operating Systems with Rust","<programming><language-choice><c><operating-systems>"
"Detailed video lecture that gives in-depth explanation of the intuition behind Fibonacci Heaps operations","<self-learning><resource-request><databases>"
"Clear plan for self-study?","<self-learning>"
"AP Computer Science A vs. OCP","<self-learning><java><ap-computer-science-a>"
"What to teach in an Advanced Computer Networking course?","<networks><course-design>"
"Creating a pre-recorded lecture","<lecture-tools>"
"Is there a Java library for testing command line applications?","<java><grading><auto-graders>"
"Any good resource for introducing kids to programming using Python's Turtle Graphics?","<curriculum-design>"
"Dataset colection of weighted graphs","<graph-theory>"
"Operating System Concepts by Silberschatz and Galvin, how much down the edition timeline can I go to safely understand the core-concept","<self-learning><resource-request><textbook><operating-systems>"
"Jackson based IDE for programming","<programming><functional-programming><ide><gui><graph-theory>"
"Concept of variable","<programming><variables><data-types>"
"Is CS50 AP available for new teachers for 2020-2021?","<ap-cs-principles>"
"Items on grading rubric for a coding assignment","<assessment>"
"Grading source code in an online environment","<programming><grading><assessment><online>"
"Creating a rubric for computer arithmetic","<undergraduate><grading><number-system><floating-point><twos-complement>"
"Where can I find high-quality editable slides for teaching git?","<resource-request><git>"
"Teaching in class and online cohorts CS","<assessment><lecture-tools>"
"KANBAN materials","<soft-skills><agile-development>"
"When mentoring individuals, teach clean coding and simple/effective thinking or let them do it their way?","<java><algorithms>"
"Algorithmic Game Theory as an undergrad","<self-learning><resource-request><undergraduate><algorithms>"
"Looking for a text book on object-oriented concepts and programming","<resource-request><object-oriented-paradigm>"
"Are there problem sets for trace table problems? If not, what are some good topics to cover?","<pseudo-code><problem-structure>"
"Ways to imagine a computer program for a student without photographic visualisation","<programming>"
"relationship between ACM curriculum guidelines from 2013 and computing curricula 2020","<curriculum-design><acm>"
"Looking for good Master Theorem examples","<undergraduate><algorithms><exercises><recursion>"
"How to share solutions in a way they won't get uploaded","<cheating>"
"How to take PHP junior developers to senior level","<student-motivation><self-learning>"
"What would be a good project for teaching big program concepts?","<project><game-design>"
"Student not understanding explanation the 1st, 2nd... and 8th time","<struggling-students>"
"How useful is English (pseudocode and documentation) in aiding understanding?","<pseudo-code><documentation>"
"Any materials on fractional/quotient languages?","<cs-theory><complexity-theory>"
"Why does AP Computer Science A use Java?","<ap-computer-science-a>"
"What's a good example of a static factory method returning instances of subclasses?","<java><object-oriented-paradigm><code-example>"
"First Time Learning Non-Linear Data Structures","<high-school><algorithms><data-structure><c>"
"Looking for a blog article on the UI/UX design of an interactive coding interface like Khan Academy's","<resource-request><resource-information>"
"Feedback request: an assignment on programming a research paper","<algorithms><homework><scientific-papers>"
"REPL environment for teacher assignments","<best-practice><classroom-management><classroom-infrastructure><programming-environment><evaluation>"
"CS educators collaboration communities?","<collaboration>"
"Alternative to Piazza for online Q&A","<lecture-tools><distance-learning><online>"
"Why is computer science hard?","<struggling-students><student-perceptions>"
"Cheating detection script","<programming><java><cheating>"
"Difference between a Bachelor's degree and a Master's degree in CS","<undergraduate>"
"Books for programming environments/interfaces of distributed systems?","<textbook>"
"What difference are between the topics and perspectives of these two ""distributed"" books","<textbook>"
"Teaching (2,3) and AVL Trees: information in internal nodes or in external nodes?","<data-structure>"
"Are there any lists of concepts in a re computer science?","<self-learning><undergraduate>"
"Logo course scaffolding","<introductory-lesson><functional-programming>"
"Platform recommendation for an online competitive programming school","<high-school><classroom-management><distance-learning><online>"
"What and where should I study for competitive programming?","<self-learning><resource-request><programming><textbook>"
"Concern over plagiarism in designing online course","<plagiarism>"
"Book recommendation on human ""computers""","<textbook><computer-history>"
"Are there any conventions for writing logic statements for combinations of logic gate functions?","<lesson-ideas><computational-thinking>"
"“What do you mean it’s plagiarism? It’s from the docs!”","<code-example><plagiarism>"
"What are some events/contests besides GSOC and ICPC that a first year undergrad Computer Science Engineering student should get involved with?","<programming>"
"Best book and video lecture series to follow for an ""object oriented programming"" course for advanced undergraduates","<self-learning><resource-request><java><object-oriented-paradigm><textbook>"
"What is a real-world (production-code) example of a function having default arguments?","<functional-programming><code-example>"
"Cormen's ""Algorithms"" pre-requisites","<high-school><algorithms><ap-cs-principles><mathematics>"
"What are good, practical labs and activities for unnested loops?","<lesson-ideas><high-school><algorithms><looping>"
"Self Learning Quantum Computing and helpful resources that can aid, guide and teach Quantum Computing from CS&E perspective","<self-learning><resource-request><quantum-computing>"
"I know C++ 2003 How to start learning C++ 2017?","<self-learning>"
"Some real practical example to teach object-oriented concepts and programming (in python)","<lesson-ideas><curriculum-design><high-school><object-oriented-paradigm>"
"Subtopics to cover within Karnaugh Maps","<boolean-algebra><curriculum-review><digital-logic>"
"Mnemonics to remember the TCP header fields","<self-learning><resource-request><networks>"
"CSCI Major with a love for film","<self-learning>"
"Ways to do live polling (aka ConcepTests) during class","<classroom-infrastructure>"
"Algorithm Design challenges","<algorithms><grading>"
"Creating a complete application","<self-learning><resource-request><c++>"
"Realistic task for teaching bit operations","<programming>"
"How many projects(within the same organisation) can one apply for in GSoC (google summer of code)?","<programming><project>"
"How to advise change in a curriculum as a new teacher","<curriculum-design>"
"Common questions students may ask when they learn OOP?","<lesson-ideas><object-oriented-paradigm>"
"History of educational programming languages","<language-choice><computer-history><programming-environment><secondary-education>"
"Exercises for the ""Code"" book","<exercises><code-example><architecture>"
"Using autograding (Github Classroom) - pitfalls and best practices?","<python><auto-graders><machine-learning><github><unit-testing>"
"Teach smart pointers to beginners with no knowlege of OOP or templates","<teaching-analogy><c++><pointers>"
"How should I handle over-demanding assignment providers?","<undergraduate><project>"
"Number of preps for networking and programming courses","<programming><networks><curriculum>"
"What are some fun projects for non-CS majors?","<lesson-ideas><student-motivation><programming>"
"Order of parameter / variables on stack in C","<c><parameters><stack>"
"Curriculum for a primary school learner","<student-motivation><programming><primary-school>"
"Trying out the concepts of machine learning during teaching from home","<artificial-intelligence><machine-learning>"
"introduction materials to the actor model?","<resource-request><textbook><concurrency>"
"How to learn Java as a beginner?","<self-learning><programming><java>"
"Textbook or video lectures to develope intuition for solving any unseen Graph Theory problems","<self-learning><resource-request><algorithms><data-structure><graph-theory>"
"How should Parsons Problems be graded?","<grading>"
"How do you read and write a project beyond a one-page script?","<self-learning><project>"
"How to learn C++?","<self-learning><c++>"
"is there any good specific pedagogy research to teach spreadsheets?","<lesson-ideas><programming-paradigms>"
"games for teaching html","<exercises><html>"
"How to use CSS diner to teach beginners in CSS","<exercises><css>"
"What's a good platform for independently teaching computer science and programming?","<programming>"
"Forming a foundation in PHP","<programming><web-development><databases>"
"Have databases disappeared at GCSE?","<high-school><exams>"
"Is there any detailed video lecture series which uses “Compilers: Principles, Techniques and Tools” by Aho et al as the text book as a bible?","<self-learning><resource-request><compiling>"
"Simple use case for self-modifying programs","<teaching-analogy><computational-thinking>"
"Reduce snap!'s features","<high-school><snap>"
"Best online problem-bank style practice site for Python","<python>"
"Reference request for resource with difficult programming exercises","<textbook><exercises>"
"How necessary is UML for a course in object programming patterns?","<object-oriented-paradigm>"
"Video lecture series for automata theory or theory of computation based on Peter Linz's text book","<self-learning><resource-request>"
"Any tools or frameworks for visualisation of algorithms?","<algorithms>"
"Services-centered design","<resource-request><introductory-lesson><labs><course-design>"
"How can I credit to sources I'll use for my paid or free video tutorials on YouTube or Udemy?","<ethics><plagiarism>"
"Book to substitute ""Compilers: Principles, Techniques and Tools"" by Ullman et. al. (popularly known as the red dragon book)","<self-learning><resource-request><textbook><compiling>"
"Do you know online courses with Haskell for Theory of Computation?","<programming><functional-programming><cs-theory>"
"Data Engineering, ETL, SQL Server Integration Services(SSIS) resources form beginner to pro level","<sql>"
"How many of ""The Seven Laws of Teaching"" are still relevant for teaching computer science today?","<high-school><best-practice><active-learning><primary-school><online>"
"Learning GoLang","<self-learning><programming>"
"First programming Language : C or Python?","<python><c>"
"Online Platform for practicing Object Oriented Programming in Python","<programming><object-oriented-paradigm><python>"